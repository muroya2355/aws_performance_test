---
  AWSTemplateFormatVersion: '2010-09-09'
  Description: 'TestEC2/SG/Key'
  
  Parameters:
  # ------------------------
  # 構成管理サーバ用パラメータ
  # ------------------------
    TestAnsiblePrivateIP:
      Type: String
      Default: 192.168.10.11
    TestAnsibleImageID:
      Type: AWS::SSM::Parameter::Value<String>
      Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
    TestAnsibleInstanceType:
      Type: String
      Default: t3.micro
    TestAnsibleKeyName:
      Type: "AWS::EC2::KeyPair::KeyName"
      Default: "key-performance-test"
    FromIPSegment:
      Type: String
      Default: XXX.XXX.XXX.XXX/32
  # ------------------------
  # JMeterクライアント用パラメータ
  # ------------------------
    TestWinPrivateIP:
      Type: String
      Default: 192.168.30.21
    TestWinImageID:
      Type: AWS::SSM::Parameter::Value<String>
      Default: /aws/service/ami-windows-latest/Windows_Server-2019-Japanese-Full-Base
    TestWinInstanceType:
      Type: String
      Default: t3.micro
  # ------------------------
  # JMeterサーバ用パラメータ
  # ------------------------
    TestJmeterPrivateIP:
      Type: String
      Default: 192.168.30.31
    TestJmeterImageID:
      Type: AWS::SSM::Parameter::Value<String>
      Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
    TestJmeterInstanceType:
      Type: String
      Default: t3.micro
    TestJmeterKeyName:
      Type: "AWS::EC2::KeyPair::KeyName"
      Default: "key-performance-test"


  Resources:
  # ------------------------
  # 構成管理サーバ
  # ------------------------
    # セキュリティグループ
    TestAnsibleSG:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupName: sg_testansible
        GroupDescription: "SG for TestAnsible"
        VpcId: !ImportValue VPCID
        # 作業用PCからの通信を許可
        SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: 22
            ToPort: 22
            CidrIp: !Ref FromIPSegment

    # IAMロールからインスタンスプロファイルの設定
    TestAnsibleIAMInstanceProfile:
      Type: "AWS::IAM::InstanceProfile"
      Properties:
        Path: "/"
        Roles:
        - !ImportValue EC2IAMRole

    # 起動テンプレート
    TestAnsibleLaunchTemplate:
      Type: AWS::EC2::LaunchTemplate
      Properties:
        LaunchTemplateName: TestAnsibleLaunchTemplate
        LaunchTemplateData:
          # 基本設定
          ImageId: !Ref TestAnsibleImageID
          InstanceMarketOptions:
            MarketType: spot
            SpotOptions: 
              InstanceInterruptionBehavior: stop
              SpotInstanceType: persistent
          KeyName: !Ref TestAnsibleKeyName
          InstanceType: !Ref TestAnsibleInstanceType
          # EBS設定
          BlockDeviceMappings:
          - DeviceName: /dev/sda1
            Ebs:
              VolumeType: gp2
              VolumeSize: 8
              DeleteOnTermination: true
          # IAMロールをインスタンスにアタッチ
          IamInstanceProfile:
            Arn: !GetAtt
              - TestAnsibleIAMInstanceProfile
              - Arn
          # ユーザデータの設定（AnsibleからWinRMでリモート操作の許可）
          UserData:
            Fn::Base64: |
              #!/bin/bash
              sudo yum install -y git
              sudo amazon-linux-extras install -y python3.8
              sudo pip3.8 install --upgrade pip
              /usr/local/bin/pip3.8 install ansible
              /usr/local/bin/pip3.8 install boto3 botocore
              /usr/local/bin/pip3.8 install pywinrm
              sudo yum -y install postgresql.x86_64
              source .bash_profile
          # タグ設定
          TagSpecifications:
          - ResourceType: instance
            Tags:
            - Key: Name
              Value: testansible-launchsetting


    # インスタンス設定
    TestAnsibleInstance:
      Type: AWS::EC2::Instance
      Properties: 
        # 起動テンプレートの設定
        LaunchTemplate:
          # 起動テンプレートのID
          LaunchTemplateId: !Ref TestAnsibleLaunchTemplate
          Version: !GetAtt TestAnsibleLaunchTemplate.LatestVersionNumber
        # ネットワーク設定
        NetworkInterfaces:
          - AssociatePublicIpAddress: "true"
            DeviceIndex: "0"
            SubnetId: !Select [0, !Split [",", !ImportValue PublicSubnetIDs]]
            PrivateIpAddress: !Ref TestAnsiblePrivateIP
            GroupSet:
              - !Ref TestAnsibleSG
        # タグ設定
        Tags:
          - Key: Name
            Value: test-ansible
          - Key: Application
            Value: ansible


  # ------------------------
  # JMeterクライアント用リソース
  # ------------------------
    # セキュリティグループ
    TestWinSG:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupName: sg_testwin
        GroupDescription: "SG for TestWin"
        VpcId: !ImportValue VPCID
        SecurityGroupIngress:
          # 構成管理サーバからの通信を許可
          - IpProtocol: tcp
            FromPort: 3389
            ToPort: 3389
            SourceSecurityGroupId: !Ref TestAnsibleSG
          - IpProtocol: tcp
            FromPort: 5986
            ToPort: 5986
            SourceSecurityGroupId: !Ref TestAnsibleSG

    TestWinSecurityGroupIngress:
      Type: AWS::EC2::SecurityGroupIngress
      Properties:
        # JMeterサーバからの通信を許可
        GroupId: !Ref TestWinSG
        IpProtocol: -1
        SourceSecurityGroupId: !Ref TestJmeterSG

    # IAMロールからインスタンスプロファイルの設定
    TestWinIAMInstanceProfile:
      Type: "AWS::IAM::InstanceProfile"
      Properties:
        Path: "/"
        Roles:
        - !ImportValue EC2IAMRole

    # 起動テンプレート
    TestWinLaunchTemplate:
      Type: AWS::EC2::LaunchTemplate
      Properties:
        LaunchTemplateName: TestWinLaunchTemplate
        LaunchTemplateData:
          # 基本設定
          ImageId: !Ref TestWinImageID
          InstanceMarketOptions:
            MarketType: spot
            SpotOptions: 
              InstanceInterruptionBehavior: stop
              SpotInstanceType: persistent
          KeyName: !Ref TestAnsibleKeyName
          InstanceType: !Ref TestWinInstanceType
          # EBS設定
          BlockDeviceMappings:
          - DeviceName: /dev/sda1
            Ebs:
              VolumeType: gp2
              VolumeSize: 30
              DeleteOnTermination: true
          # IAMロールをインスタンスにアタッチ
          IamInstanceProfile:
            Arn: !GetAtt
              - TestWinIAMInstanceProfile
              - Arn
          # ユーザデータの設定（AnsibleからWinRMでリモート操作の許可）
          UserData:
            Fn::Base64: |
              <powershell>
              $url = "https://raw.githubusercontent.com/ansible/ansible/devel/examples/scripts/ConfigureRemotingForAnsible.ps1"
              $file = "$env:temp\ConfigureRemotingForAnsible.ps1"
              (New-Object -TypeName System.Net.WebClient).DownloadFile($url, $file)
              powershell.exe -ExecutionPolicy ByPass -File $file
              </powershell>
          # タグ設定
          TagSpecifications:
          - ResourceType: instance
            Tags:
            - Key: Name
              Value: testwin-launchsetting

    # インスタンス設定
    TestWinInstance:
      Type: AWS::EC2::Instance
      Properties:
        # 起動テンプレートの設定
        LaunchTemplate:
          # 起動テンプレートのID
          LaunchTemplateId: !Ref TestWinLaunchTemplate
          Version: !GetAtt TestWinLaunchTemplate.LatestVersionNumber
        # ネットワーク設定
        NetworkInterfaces:
          - DeviceIndex: "0"
            SubnetId: !Select [0, !Split [",", !ImportValue PrivateSubnetIDs]]
            PrivateIpAddress: !Ref TestWinPrivateIP
            GroupSet:
              - !Ref TestWinSG
        # タグ設定
        Tags:
          - Key: Name
            Value: test-win
          - Key: Application
            Value: windows


  # ------------------------
  # JMeterサーバ用リソース
  # ------------------------
    # セキュリティグループ
    TestJmeterSG:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupName: sg_testjmeter
        GroupDescription: "SG for TestJmeter"
        VpcId: !ImportValue VPCID
        SecurityGroupIngress:
          # 構成管理サーバからの接続許可
          - IpProtocol: tcp
            FromPort: 22
            ToPort: 22
            SourceSecurityGroupId: !Ref TestAnsibleSG
          # JMeterクライアントからの接続許可
          - IpProtocol: -1
            SourceSecurityGroupId: !Ref TestWinSG

    # IAMロールからインスタンスプロファイルの設定
    TestJmeterIAMInstanceProfile:
      Type: "AWS::IAM::InstanceProfile"
      Properties:
        Path: "/"
        Roles:
        - !ImportValue EC2IAMRole

    # 起動テンプレート
    TestJmeterLaunchTemplate:
      Type: AWS::EC2::LaunchTemplate
      Properties:
        LaunchTemplateName: TestJmeterLaunchTemplate
        LaunchTemplateData:
          # 基本設定
          ImageId: !Ref TestJmeterImageID
          InstanceMarketOptions:
            MarketType: spot
            SpotOptions: 
              InstanceInterruptionBehavior: stop
              SpotInstanceType: persistent
          KeyName: !Ref TestJmeterKeyName
          InstanceType: !Ref TestJmeterInstanceType
          # EBS設定
          BlockDeviceMappings:
          - DeviceName: /dev/sda1
            Ebs:
              VolumeType: gp2
              VolumeSize: 8
              DeleteOnTermination: true
          # IAMロールをインスタンスにアタッチ
          IamInstanceProfile:
            Arn: !GetAtt
              - TestJmeterIAMInstanceProfile
              - Arn
          # タグ設定
          TagSpecifications:
          - ResourceType: instance
            Tags:
            - Key: Name
              Value: testjmeter-launchsetting

    # インスタンス設定
    TestJmeterInstance:
      Type: AWS::EC2::Instance
      Properties: 
        # 起動テンプレートの設定
        LaunchTemplate:
          # 起動テンプレートのID
          LaunchTemplateId: !Ref TestJmeterLaunchTemplate
          Version: !GetAtt TestJmeterLaunchTemplate.LatestVersionNumber
        # ネットワーク設定
        NetworkInterfaces:
          - DeviceIndex: "0"
            SubnetId: !Select [0, !Split [",", !ImportValue PrivateSubnetIDs]]
            PrivateIpAddress: !Ref TestJmeterPrivateIP
            GroupSet:
              - !Ref TestJmeterSG
        # タグ設定
        Tags:
          - Key: Name
            Value: test-jmeter
          - Key: Application
            Value: jmeter-server


  # ------------------------
  # リソースID出力
  # ------------------------
  Outputs:
    TestAnsibleSG:
      Value: !Ref TestAnsibleSG
      Export:
        Name: TestAnsibleSG
    TestWinSG:
      Value: !Ref TestWinSG
      Export:
        Name: TestWinSG
    TestJmeterSG:
      Value: !Ref TestJmeterSG
      Export:
        Name: TestJmeterSG