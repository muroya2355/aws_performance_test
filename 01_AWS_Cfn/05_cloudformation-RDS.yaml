---
  AWSTemplateFormatVersion: '2010-09-09'
  Description: 'DB (RDS/SG)'

  Parameters:
    DBInstanceID:
      Type: String
      Default: db
    DatabaseName:
      Type: String
      Default: tourreserve
    RDSEngineVersion:
      Type: String
      Default: 12.8
    RDSInstanceType:
      Type: String
      Default: db.t3.micro
    DBAllocatedStorage:
      Type: String
      Default: 20
    DBStorageType:
      Type: String
      Default: "gp2"
    isMultiAZ:
      Type: String
      Default: false
    DBUserName:
      Type: String
      Default: postgres
    DBUserPassword:
      NoEcho: true
      Type: String
      Default: P0stgres
    PrivateHostedZoneName:
      Type: String
      Default: tourreserve.local

  Resources:
    DB:
      Type: AWS::RDS::DBInstance
      Properties:
        DBInstanceIdentifier: !Ref DBInstanceID
        DBName: !Ref DatabaseName
        Engine: postgres
        EngineVersion: !Ref RDSEngineVersion
        MultiAZ: !Ref isMultiAZ
        DBInstanceClass: !Ref RDSInstanceType
        AllocatedStorage: !Ref DBAllocatedStorage
        StorageType: !Ref DBStorageType
        MasterUsername: !Ref DBUserName
        MasterUserPassword: !Ref DBUserPassword
        DBParameterGroupName: !Ref DBParameterGroup
        VPCSecurityGroups:
          - !Ref DBSG
        DBSubnetGroupName: !Ref DBSubnetGroup
        Tags:
          - Key: Name
            Value: pgdb

    DBParameterGroup:
      Type: "AWS::RDS::DBParameterGroup"
      Properties:
        Family: postgres12
        Description: DB Parameter Group

    DBSG:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: SG for DB instance
        VpcId: !ImportValue VPCID
        SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: 5432
            ToPort: 5432
            SourceSecurityGroupId: !ImportValue WebAPEC2SG
          - IpProtocol: tcp
            FromPort: 5432
            ToPort: 5432
            SourceSecurityGroupId: !ImportValue TestEC2SG

    DBSubnetGroup:
      Type: AWS::RDS::DBSubnetGroup
      Properties:
        DBSubnetGroupDescription: Subnet for DB instance
        SubnetIds:
          - !Select [0, !Split [",", !ImportValue PrivateSubnetIDs]]
          - !Select [1, !Split [",", !ImportValue PrivateSubnetIDs]]

    PrivateHostedZone:
      Type: AWS::Route53::HostedZone
      Properties:
        Name:
          !Ref PrivateHostedZoneName
        VPCs:
          - VPCId:
              !ImportValue VPCID
            VPCRegion:
              Fn::Sub: "${AWS::Region}"

    DNSRecordSet:
      DependsOn: PrivateHostedZone
      Type: AWS::Route53::RecordSet
      Properties:
        HostedZoneId: !Ref PrivateHostedZone
        Name: !Sub db.${PrivateHostedZoneName}
        Type: CNAME
        TTL: '300'
        ResourceRecords:
        - !GetAtt DB.Endpoint.Address



  Outputs:
    DBInstanceID:
      Value: !Ref DB
      Export:
        Name: DBInstanceID

    DBInstanceEndpoint:
      Value: !GetAtt DB.Endpoint.Address
      Export:
        Name: DBInstanceEndpoint